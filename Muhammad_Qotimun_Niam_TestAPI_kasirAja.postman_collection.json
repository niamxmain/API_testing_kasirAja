{
	"info": {
		"_postman_id": "2fc86759-8e1d-4c26-8a6a-17f85b009d15",
		"name": "Muhammad_Qotimun_Niam_TestAPI_kasirAja",
		"description": "This documentation for API Testing from kasirAja apps.\n\nTesting for some Functional include:\n\n1. Auth\n    \n2. User\n    \n3. Unit\n    \n4. Category\n    \n5. Customer\n    \n6. Product\n    \n7. Transaction",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "22527581",
		"_collection_link": "https://www.postman.com/zeroneniam/workspace/testing-api-niam/collection/22527581-2fc86759-8e1d-4c26-8a6a-17f85b009d15?action=share&source=collection_link&creator=22527581"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Check Data Response\", function() {",
									"    pm.expect(data.message).to.eql(\"Toko berhasil didaftarkan\");",
									"    pm.expect(data.status).to.eql('success');",
									"    pm.expect(data.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.data).to.have.property('email').that.is.a('string');",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Toko jaya\",\n   \"email\": \"{{email}}\",\n   \"password\": \"{{password}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/registration"
					},
					"response": [
						{
							"name": "Registration",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"Toko jaya\",\n   \"email\": \"{{email}}\",\n   \"password\": \"{{password}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/registration"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "118"
								},
								{
									"key": "date",
									"value": "Mon, 26 Feb 2024 05:41:43 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Toko berhasil didaftarkan\",\n    \"data\": {\n        \"name\": \"Toko jaya\",\n        \"email\": \"tobepi9218@ksyhtc.com\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"accessToken\", datas.data.accessToken);",
									"pm.collectionVariables.set(\"refreshToken\", datas.data.refreshToken);",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"    pm.expect(datas.message).to.eql(\"Authentication berhasil ditambahkan\");",
									"});",
									"",
									"pm.test(\"Data contains accessToken, refreshToken, and user\", function () {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('accessToken').that.is.a('string');",
									"    pm.expect(data).to.have.property('refreshToken').that.is.a('string');",
									"    pm.expect(data).to.have.property('user').that.is.an('object');",
									"",
									"    const user = data.user;",
									"    pm.expect(user).to.have.property('id').that.is.a('string');",
									"    pm.expect(user).to.have.property('name').that.is.a('string');",
									"    pm.expect(user).to.have.property('role').that.is.a('string');",
									"    pm.expect(user).to.have.property('email').that.is.a('string');",
									"    pm.expect(user).to.have.property('officeId').that.is.a('string');",
									"    pm.expect(user).to.have.property('companyId').that.is.a('string');",
									"    pm.expect(user).to.have.property('company_name').that.is.a('string');",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"email\": \"{{email}}\",\n   \"password\": \"{{password}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/authentications"
					},
					"response": [
						{
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"email\": \"{{email}}\",\n   \"password\": \"{{password}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/authentications"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,Accept-Encoding,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "495"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "date",
									"value": "Mon, 26 Feb 2024 05:42:06 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Authentication berhasil ditambahkan\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA1YTg2NGVhLTBjYTAtNGZkYS04ZWRkLTBjYmYwYjQ2NGQ0NSIsImNvbXBhbnlJZCI6IjE0MTk0YzczLWQwYzQtNDFlNS1iNDQ2LTA0MmQxODBhYTJiMCIsImlhdCI6MTcwODkyNjEyNn0.ydESn8MICw1ptAn2edtT8sY37JHqrcUiYk852L0crxI\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA1YTg2NGVhLTBjYTAtNGZkYS04ZWRkLTBjYmYwYjQ2NGQ0NSIsImNvbXBhbnlJZCI6IjE0MTk0YzczLWQwYzQtNDFlNS1iNDQ2LTA0MmQxODBhYTJiMCIsImlhdCI6MTcwODkyNjEyNn0.BIN9Gg1575-sG_xHl98RV4fFibHRYiuM4k-qGRzV2zg\",\n        \"user\": {\n            \"id\": \"05a864ea-0ca0-4fda-8edd-0cbf0b464d45\",\n            \"name\": \"Toko jaya\",\n            \"role\": \"admin\",\n            \"email\": \"tobepi9218@ksyhtc.com\",\n            \"officeId\": \"63fedcf1-534d-4857-be58-78d26483c593\",\n            \"companyId\": \"14194c73-d0c4-41e5-b446-042d180aa2b0\",\n            \"company_name\": \"Toko jaya\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful Code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check Response Body\", function() {",
									"    pm.expect(data.message).to.eql(\"Access Token berhasil diperbarui\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"    pm.expect(data.data).to.have.property('accessToken').that.is.a('string');",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"refreshToken\": \"{{refreshToken}}\"\n}\n"
						},
						"url": "{{baseUrl}}/authentications"
					},
					"response": [
						{
							"name": "Refresh Token",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"refreshToken\": \"{{refreshToken}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/authentications"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,Accept-Encoding,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "270"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "date",
									"value": "Mon, 26 Feb 2024 05:42:59 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Access Token berhasil diperbarui\",\n    \"data\": {\n        \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA1YTg2NGVhLTBjYTAtNGZkYS04ZWRkLTBjYmYwYjQ2NGQ0NSIsImNvbXBhbnlJZCI6IjE0MTk0YzczLWQwYzQtNDFlNS1iNDQ2LTA0MmQxODBhYTJiMCIsImlhdCI6MTcwODkyNjE3OX0.qxtfJ1KSnpFllq5m5k-DIPhlUn1OoE-14DUvIUqUxFk\"\n    }\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful Code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check Response Body\", function() {",
									"    pm.expect(data.message).to.eql(\"Refresh token berhasil dihapus\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"refreshToken\": \"{{refreshToken}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/authentications"
					},
					"response": [
						{
							"name": "Logout",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"refreshToken\": \"{{refreshToken}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/authentications"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "63"
								},
								{
									"key": "date",
									"value": "Mon, 26 Feb 2024 05:43:09 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Refresh token berhasil dihapus\"\n}"
						}
					]
				}
			],
			"description": "Folder Testing Authentication",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"userId\", data.data.userId);",
									"",
									"pm.test(\"Successful POST Create User\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Message: User berhasil ditambahkan\", function() {",
									"    pm.expect(data.data).to.have.property('userId').that.is.a('string');",
									"    pm.expect(data.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.message).to.eql(\"User berhasil ditambahkan\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"niam\",\n   \"email\": \"user@example.com\",\n   \"password\": \"jiasda2321@\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users"
					},
					"response": [
						{
							"name": "Create User",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"niam\",\n   \"email\": \"user@example.com\",\n   \"password\": \"jiasda2321@\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "129"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:57:20 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"User berhasil ditambahkan\",\n    \"data\": {\n        \"userId\": \"77a9b814-fe1e-494f-8a16-47467d6e62ae\",\n        \"name\": \"niam\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get User Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: User Detail\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('user').that.is.an('object');",
									"    pm.expect(data.user).to.have.property('id').that.is.a('string');",
									"    pm.expect(data.user).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.user).to.have.property('email').that.is.a('string');",
									"    pm.expect(data.user).to.have.property('role').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/users/{{userId}}"
					},
					"response": [
						{
							"name": "Get User Detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/users/{{userId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "138"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:57:26 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"user\": {\n            \"id\": \"77a9b814-fe1e-494f-8a16-47467d6e62ae\",\n            \"name\": \"niam\",\n            \"email\": \"user@example.com\",\n            \"role\": \"kasir\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get User List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Data\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('users').that.is.an('array');",
									"    pm.expect(data).to.have.property('meta').that.is.an('object');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/users"
					},
					"response": [
						{
							"name": "Get User List",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/users"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,Accept-Encoding,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "304"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:57:32 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"users\": [\n            {\n                \"id\": \"77a9b814-fe1e-494f-8a16-47467d6e62ae\",\n                \"name\": \"niam\",\n                \"email\": \"user@example.com\",\n                \"role\": \"kasir\"\n            },\n            {\n                \"id\": \"d3982283-e642-4e50-b38e-29ad2511e36c\",\n                \"name\": \"niam\",\n                \"email\": \"user@example.com\",\n                \"role\": \"kasir\"\n            },\n            {\n                \"id\": \"47608b0b-9539-4443-bde9-e4a0555d17b6\",\n                \"name\": \"niam\",\n                \"email\": \"user@example.com\",\n                \"role\": \"kasir\"\n            },\n            {\n                \"id\": \"05a864ea-0ca0-4fda-8edd-0cbf0b464d45\",\n                \"name\": \"Toko jaya\",\n                \"email\": \"tobepi9218@ksyhtc.com\",\n                \"role\": \"admin\"\n            }\n        ],\n        \"meta\": {\n            \"totalPages\": 1,\n            \"total\": 4,\n            \"page\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Put request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: Update User\", function() {",
									"    pm.expect(datas.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"    pm.expect(datas.message).to.eql(\"User berhasil diupdate\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"zeroneniam\",\n\"email\": \"user@example.com\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{userId}}"
					},
					"response": [
						{
							"name": "Update User",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"name\": \"zeroneniam\",\n\"email\": \"user@example.com\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/users/{{userId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "84"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:57:41 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"User berhasil diupdate\",\n    \"data\": {\n        \"name\": \"zeroneniam\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful Code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check Response Body\", function() {",
									"    pm.expect(data.message).to.eql(\"User berhasil dihapus\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/users/{{userId}}"
					},
					"response": [
						{
							"name": "Delete User",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/users/{{userId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "54"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:57:47 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"User berhasil dihapus\"\n}"
						}
					]
				}
			],
			"description": "Folder Testing User"
		},
		{
			"name": "Units",
			"item": [
				{
					"name": "Add Unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"unitId\", data.data.unitId);",
									"",
									"pm.test(\"Successful POST Create Unit\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Check Data Response\", function() {",
									"    pm.expect(data.data).to.have.property('unitId').that.is.a('string');",
									"    pm.expect(data.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.message).to.eql(\"Unit berhasil ditambahkan\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"gram\",\n   \"description\": \"weight measurement\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/units"
					},
					"response": [
						{
							"name": "Add Unit",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"gram\",\n   \"description\": \"weight measurement\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/units"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "129"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:58:10 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Unit berhasil ditambahkan\",\n    \"data\": {\n        \"unitId\": \"450920b8-ca5f-4a1a-8ae0-d05f27ff92cc\",\n        \"name\": \"gram\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Unit Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: Unit Detail\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('unit').that.is.an('object');",
									"    pm.expect(data.unit).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.unit).to.have.property('description').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": "{{baseUrl}}/units/{{unitId}}"
					},
					"response": [
						{
							"name": "Get Unit Detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/units/{{unitId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "87"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:58:18 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"unit\": {\n            \"name\": \"gram\",\n            \"description\": \"weight measurement\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Unit List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Data\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('units').that.is.an('array');",
									"    pm.expect(data).to.have.property('meta').that.is.an('object');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/units"
					},
					"response": [
						{
							"name": "Get Unit List",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/units"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,Accept-Encoding,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "250"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:58:25 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"units\": [\n            {\n                \"id\": \"450920b8-ca5f-4a1a-8ae0-d05f27ff92cc\",\n                \"name\": \"gram\",\n                \"description\": \"weight measurement\"\n            },\n            {\n                \"id\": \"883258d5-1a98-4b85-83dc-18373830667a\",\n                \"name\": \"gram\",\n                \"description\": \"weight measurement\"\n            },\n            {\n                \"id\": \"4e2ede31-78b3-4fbb-b9db-65629b7b3fd2\",\n                \"name\": \"Buah\",\n                \"description\": null\n            }\n        ],\n        \"meta\": {\n            \"totalPages\": 1,\n            \"total\": 3,\n            \"page\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Put request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: Update Unit\", function() {",
									"    pm.expect(datas.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"    pm.expect(datas.message).to.eql(\"Unit berhasil diupdate\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"update-meter\",\n   \"description\": \"no-meter\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/units/{{unitId}}"
					},
					"response": [
						{
							"name": "Update Unit",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"update-meter\",\n   \"description\": \"no-meter\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/units/{{unitId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "51"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:58:33 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"name\": \"update-meter\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful Code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check Response Body\", function() {",
									"    pm.expect(data.message).to.eql(\"Unit berhasil dihapus\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/units/{{unitId}}"
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/units/{{unitId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "30"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:58:40 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {}\n}"
						}
					]
				}
			],
			"description": "Folder Testing Unit",
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{accessToken}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Add Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"categoryId\", data.data.categoryId);",
									"",
									"pm.test(\"Successful POST Create Category\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Message: Category berhasil ditambahkan\", function() {",
									"    pm.expect(data.data).to.have.property('categoryId').that.is.a('string');",
									"    pm.expect(data.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.message).to.eql(\"Category berhasil ditambahkan\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"makanan ringan\",\n    \"description\": \"makanan ringan dari indofood\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/categories"
					},
					"response": [
						{
							"name": "Add Category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"makanan ringan\",\n    \"description\": \"makanan ringan dari indofood\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/categories"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "147"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:59:01 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Category berhasil ditambahkan\",\n    \"data\": {\n        \"categoryId\": \"52ec4baa-0ae6-4704-9e7d-cd0c2813dfa6\",\n        \"name\": \"makanan ringan\"\n    }\n}"
						}
					]
				},
				{
					"name": "Category Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: category Detail\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('category').that.is.an('object');",
									"    pm.expect(data.category).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.category).to.have.property('description').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/categories/{{categoryId}}"
					},
					"response": [
						{
							"name": "Category Detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/categories/{{categoryId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "111"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:59:18 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"category\": {\n            \"name\": \"makanan ringan\",\n            \"description\": \"makanan ringan dari indofood\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Category List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Data\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('categories').that.is.an('array');",
									"    pm.expect(data).to.have.property('meta').that.is.an('object');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/categories"
					},
					"response": [
						{
							"name": "Category List",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/categories"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,Accept-Encoding,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "348"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:59:26 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"categories\": [\n            {\n                \"id\": \"52ec4baa-0ae6-4704-9e7d-cd0c2813dfa6\",\n                \"name\": \"makanan ringan\",\n                \"description\": \"makanan ringan dari indofood\"\n            },\n            {\n                \"id\": \"eb63c2e9-01f5-4f8f-bf33-c11114e320c5\",\n                \"name\": \"Minuman\",\n                \"description\": \"makanan ringan dari indofood\"\n            },\n            {\n                \"id\": \"4f781372-8f31-4e69-9494-7d39da26ea2d\",\n                \"name\": \"makanan ringan\",\n                \"description\": \"makanan ringan dari indofood\"\n            },\n            {\n                \"id\": \"c40f5cfd-a157-43ce-82a5-9e55566cca8a\",\n                \"name\": \"makanan ringan\",\n                \"description\": \"makanan ringan dari indofood\"\n            },\n            {\n                \"id\": \"dbd3827d-f401-4421-bd71-fadfe28f8339\",\n                \"name\": \"makanan ringan\",\n                \"description\": \"makanan ringan dari indofood\"\n            },\n            {\n                \"id\": \"5a341d74-337f-49b3-bde4-fb7ddafc43de\",\n                \"name\": \"makanan ringan\",\n                \"description\": \"makanan ringan dari indofood\"\n            },\n            {\n                \"id\": \"77ccb1fd-3ccb-4a03-9421-d8e1f20b1347\",\n                \"name\": \"makanan ringan\",\n                \"description\": \"makanan ringan dari indofood\"\n            },\n            {\n                \"id\": \"608dd990-0dcf-4364-8cc0-fc38a6cb4d71\",\n                \"name\": \"Umum\",\n                \"description\": null\n            }\n        ],\n        \"meta\": {\n            \"totalPages\": 1,\n            \"total\": 8,\n            \"page\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Put request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: Update Category\", function() {",
									"    pm.expect(datas.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"    pm.expect(datas.message).to.eql(\"Category berhasil diupdate\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"update-minuman\",\n   \"description\": \"no-minuman\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/categories/{{categoryId}}"
					},
					"response": [
						{
							"name": "Update Category",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"update-minuman\",\n   \"description\": \"no-minuman\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/categories/{{categoryId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "53"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:59:33 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"name\": \"update-minuman\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful Code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check Response Body\", function() {",
									"    pm.expect(data.status).to.eql(\"success\");",
									"    pm.expect(data.message).to.eql(\"Category berhasil dihapus\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/categories/{{categoryId}}"
					},
					"response": [
						{
							"name": "Delete Category",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/categories/{{categoryId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "30"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 15:59:40 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {}\n}"
						}
					]
				}
			],
			"description": "Folder Testing Categories"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Add Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"customerId\", data.data.customerId);",
									"",
									"pm.test(\"Successful POST Create Customer\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Message: Customer berhasil ditambahkan\", function() {",
									"    pm.expect(data.data).to.have.property('customerId').that.is.a('string');",
									"    pm.expect(data.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.message).to.eql(\"Customer berhasil ditambahkan\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Budi\",\n   \"phone\": \"081234567890\",\n   \"address\": \"Bandoeng\",\n   \"description\": \"Budi anak Pak Edi\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/customers"
					},
					"response": [
						{
							"name": "Add Customer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"Budi\",\n   \"phone\": \"081234567890\",\n   \"address\": \"Bandoeng\",\n   \"description\": \"Budi anak Pak Edi\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/customers"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "137"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:17:54 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Customer berhasil ditambahkan\",\n    \"data\": {\n        \"customerId\": \"0813d955-90ec-4c3d-87d6-425c4ee5d3b1\",\n        \"name\": \"Budi\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Customer Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: customer Detail\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('customer').that.is.an('object');",
									"    pm.expect(data.customer).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.customer).to.have.property('phone').that.is.a('string');",
									"    pm.expect(data.customer).to.have.property('address').that.is.a('string');",
									"    pm.expect(data.customer).to.have.property('description').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/customers/{{customerId}}"
					},
					"response": [
						{
							"name": "Get Customer Detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/customers/{{customerId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "134"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:18:05 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"customer\": {\n            \"name\": \"Budi\",\n            \"phone\": \"081234567890\",\n            \"address\": \"Bandoeng\",\n            \"description\": \"Budi anak Pak Edi\"\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Customer List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Data\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('customers').that.is.an('array');",
									"    pm.expect(data).to.have.property('meta').that.is.an('object');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/customers"
					},
					"response": [
						{
							"name": "Get Customer List",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/customers"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,Accept-Encoding,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "236"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:18:12 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"customers\": [\n            {\n                \"id\": \"0813d955-90ec-4c3d-87d6-425c4ee5d3b1\",\n                \"name\": \"Budi\",\n                \"phone\": \"081234567890\",\n                \"description\": \"Budi anak Pak Edi\"\n            },\n            {\n                \"id\": \"c8f1425d-13d9-4949-9247-8b2f30bf7212\",\n                \"name\": \"Budi\",\n                \"phone\": \"081234567890\",\n                \"description\": \"Budi anak Pak Edi\"\n            },\n            {\n                \"id\": \"4823076d-a5e5-40f5-a717-27aa58938fe9\",\n                \"name\": \"Pelanggan Umum\",\n                \"phone\": \"\",\n                \"description\": \"-\"\n            }\n        ],\n        \"meta\": {\n            \"totalPages\": 1,\n            \"total\": 3,\n            \"page\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Put request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: Update Customer\", function() {",
									"    pm.expect(datas.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(datas.message).to.eql(\"Customer berhasil diupdate\");",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Budi Doremi\",\n   \"phone\": \"08987654321\",\n   \"address\": \"Bandung\",\n   \"description\": \"Pelanggan VIP\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/customers/{{customerId}}"
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"Budi Doremi\",\n   \"phone\": \"08987654321\",\n   \"address\": \"Bandung\",\n   \"description\": \"Pelanggan VIP\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/customers/{{customerId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "50"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:18:21 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"name\": \"Budi Doremi\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful Code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check Response Body\", function() {",
									"    pm.expect(data.status).to.eql(\"success\");",
									"    pm.expect(data.message).to.eql(\"Customer berhasil dihapus\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/customers/{{customerId}}"
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/customers/{{customerId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "30"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:18:29 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {}\n}"
						}
					]
				}
			],
			"description": "Folder Testing Customers"
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Add Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"productId\", data.data.productId);",
									"",
									"pm.test(\"Successful POST Create Product\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Message: Product berhasil ditambahkan\", function() {",
									"    pm.expect(data.data).to.have.property('productId').that.is.a('string');",
									"    pm.expect(data.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.message).to.eql(\"Product berhasil ditambahkan\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"category_id\" : \"{{categoryId}}\",\n   \"code\": \"A314ASDDFIER3432\",\n   \"name\": \"taro\",\n   \"price\": \"3500\",\n   \"cost\": \"3000\",\n   \"stock\": \"5\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/products"
					},
					"response": [
						{
							"name": "Add Product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"category_id\" : \"{{categoryId}}\",\n   \"code\": \"A314ASDDFIER3432\",\n   \"name\": \"taro\",\n   \"price\": \"3500\",\n   \"cost\": \"3000\",\n   \"stock\": \"5\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/products"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "135"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:18:53 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Product berhasil ditambahkan\",\n    \"data\": {\n        \"productId\": \"0d073c9b-94ac-4b99-a13e-97ab2e930680\",\n        \"name\": \"taro\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Product Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: product Detail\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('product').that.is.an('object');",
									"    pm.expect(data.product).to.have.property('code').that.is.a('string');",
									"    pm.expect(data.product).to.have.property('name').that.is.a('string');",
									"    pm.expect(data.product.description).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(data.product).to.have.property('price').that.is.a('number');",
									"    pm.expect(data.product).to.have.property('cost').that.is.a('number');",
									"    pm.expect(data.product.cost_average).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'number';",
									"    });",
									"    pm.expect(data.product.category_name).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(data.product.category_id).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(data.product).to.have.property('stock').that.is.a('number');",
									"    ",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/products/{{productId}}"
					},
					"response": [
						{
							"name": "Get Product Detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/products/{{productId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "195"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:19:02 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"product\": {\n            \"code\": \"A314ASDDFIER3432\",\n            \"name\": \"taro\",\n            \"description\": null,\n            \"price\": 3500,\n            \"cost\": 3000,\n            \"cost_average\": null,\n            \"category_name\": null,\n            \"category_id\": null,\n            \"stock\": 5\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Product List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Data\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('products').that.is.an('array');",
									"    pm.expect(data).to.have.property('meta').that.is.an('object');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/products"
					},
					"response": [
						{
							"name": "Get Product List",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/products"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,Accept-Encoding,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "accept-ranges",
									"value": "bytes"
								},
								{
									"key": "content-length",
									"value": "300"
								},
								{
									"key": "content-encoding",
									"value": "br"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:19:12 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"products\": [\n            {\n                \"id\": \"0d073c9b-94ac-4b99-a13e-97ab2e930680\",\n                \"code\": \"A314ASDDFIER3432\",\n                \"name\": \"taro\",\n                \"description\": null,\n                \"price\": 3500,\n                \"cost\": 3000\n            },\n            {\n                \"id\": \"67adfbe0-26f6-4840-9b2e-2a192b0e675e\",\n                \"code\": \"A314ASDDFIER3432\",\n                \"name\": \"taro\",\n                \"description\": null,\n                \"price\": 3500,\n                \"cost\": 3000\n            },\n            {\n                \"id\": \"37b8c3c1-ce5a-42f6-a924-c0a720cd72bf\",\n                \"code\": \"A314ASDDFIER3432\",\n                \"name\": \"taro\",\n                \"description\": null,\n                \"price\": 3500,\n                \"cost\": 3000\n            },\n            {\n                \"id\": \"b0d05077-7da6-4a25-893e-d1c3c7609bde\",\n                \"code\": \"A314ASDDFIER3432\",\n                \"name\": \"taro\",\n                \"description\": null,\n                \"price\": 3500,\n                \"cost\": 3000\n            },\n            {\n                \"id\": \"4ece86f3-26be-4204-8e12-297f4e15b9ac\",\n                \"code\": \"A314ASDDFIER3432\",\n                \"name\": \"taro\",\n                \"description\": null,\n                \"price\": 3500,\n                \"cost\": 3000\n            },\n            {\n                \"id\": \"a4743227-269b-43ca-ad3d-eabe916c784e\",\n                \"code\": \"A314ASDDFIER3432\",\n                \"name\": \"taro\",\n                \"description\": null,\n                \"price\": 3500,\n                \"cost\": 3000\n            }\n        ],\n        \"meta\": {\n            \"totalPages\": 1,\n            \"total\": 6,\n            \"page\": 1\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Put request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: Update User\", function() {",
									"    pm.expect(datas.data).to.have.property('name').that.is.a('string');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"    pm.expect(datas.message).to.eql(\"Product berhasil diupdate\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"category_id\" : \"{{categoryId}}\",\n   \"code\": \"A314ASDDFIER3432\",\n   \"name\": \"taro\",\n   \"price\": \"3500\",\n   \"cost\": \"3000\",\n   \"stock\": \"1\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/products/{{productId}}"
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"category_id\" : \"{{categoryId}}\",\n   \"code\": \"A314ASDDFIER3432\",\n   \"name\": \"taro\",\n   \"price\": \"3500\",\n   \"cost\": \"3000\",\n   \"stock\": \"1\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/products/{{productId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "81"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:19:24 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Product berhasil diupdate\",\n    \"data\": {\n        \"name\": \"taro\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.test(\"Successful Code 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Check Response Body\", function() {",
									"    pm.expect(data.message).to.eql(\"Product berhasil dihapus\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/products/{{productId}}"
					},
					"response": [
						{
							"name": "Delete Product",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/products/{{productId}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "vary",
									"value": "origin,User-Agent"
								},
								{
									"key": "access-control-expose-headers",
									"value": "WWW-Authenticate,Server-Authorization"
								},
								{
									"key": "cache-control",
									"value": "no-cache"
								},
								{
									"key": "content-length",
									"value": "57"
								},
								{
									"key": "date",
									"value": "Fri, 13 Oct 2023 16:19:37 GMT"
								},
								{
									"key": "server",
									"value": "LiteSpeed"
								},
								{
									"key": "x-powered-by",
									"value": "Niagahoster"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=2592000, h3-29=\":443\"; ma=2592000, h3-Q050=\":443\"; ma=2592000, h3-Q046=\":443\"; ma=2592000, h3-Q043=\":443\"; ma=2592000, quic=\":443\"; ma=2592000; v=\"43,46\""
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Product berhasil dihapus\"\n}"
						}
					]
				}
			],
			"description": "Folder Testing Products"
		},
		{
			"name": "Transaction",
			"item": [
				{
					"name": "Add Sales",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"saleId\", data.data.saleId);",
									"",
									"pm.test(\"Successful POST Create Sales\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Message: User berhasil ditambahkan\", function() {",
									"    pm.expect(data.data).to.have.property('saleId').that.is.a('string');",
									"    pm.expect(data.message).to.eql(\"transaksi ditambahkan\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"officeId\": \"2f458834-0b21-466f-9f56-d35a8ed6f6ba\",\n   \"customerId\": \"811f547e-a24e-4f94-bfe1-b7ed7d11c03f\",\n   \"date\": \"2023-11-03\",\n   \"invoice\": \"INV001\",\n   \"amount\": 2000,\n   \"discount\": 0,\n   \"description\": \"Pembelian pertama\",\n   \"items\" : [\n       {\n           \"productId\": \"{{productId}}\",\n           \"quantity\": 1,\n           \"price\": 2000\n       }\n   ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/sales"
					},
					"response": []
				},
				{
					"name": "Get List Sales Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: User Detail\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('sales').that.is.an('array');",
									"    pm.expect(data).to.have.property('meta').that.is.an('object');",
									"    pm.expect(data.meta).to.have.property('page').that.is.a('number');",
									"    pm.expect(data.meta).to.have.property('total').that.is.a('number');",
									"    pm.expect(data.meta).to.have.property('totalPages').that.is.a('number');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sales?startDate={{currentdate}}&endDate={{futuredate}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sales"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{currentdate}}"
								},
								{
									"key": "endDate",
									"value": "{{futuredate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sale Order Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Data\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('sale').that.is.an('object');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"",
									"pm.test(\"Check Data Sale\", function () {",
									"    pm.expect(datas.data.sale.date).to.match(/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).(\\d{3})Z$/);",
									"    pm.expect(datas.data.sale.invoice).to.be.a('string');",
									"    pm.expect(datas.data.sale.description).to.be.a('string');",
									"    pm.expect(datas.data.sale.amount).to.be.a('number');",
									"    pm.expect(datas.data.sale.discount).to.be.a('number');",
									"    pm.expect(datas.data.sale.casier).to.be.a('string');",
									"    pm.expect(datas.data.sale.office_name).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(datas.data.sale.customer_id).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(datas.data.sale.customer_name).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(datas.data.sale).to.have.property('items').that.is.an('array');",
									"});",
									"",
									"pm.test(\"Check data items\", function() {",
									"    datas.data.sale.items.forEach(function (item) {",
									"    pm.expect(item.id).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(item.code).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(item.name).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(item).to.have.property('quantity').that.is.a('number');",
									"    pm.expect(item).to.have.property('price').that.is.a('number');",
									"    })",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/sales/{{saleId}}"
					},
					"response": []
				},
				{
					"name": "Add Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"purchaseId\", data.data.purchaseId);",
									"",
									"pm.test(\"Successful POST Create User\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Message: User berhasil ditambahkan\", function() {",
									"    pm.expect(data.data).to.have.property('purchaseId').that.is.a('string');",
									"    pm.expect(data.message).to.eql(\"transaksi ditambahkan\");",
									"    pm.expect(data.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"officeId\": \"2f458834-0b21-466f-9f56-d35a8ed6f6ba\",\n   \"date\": \"2023-01-28\",\n   \"invoice\": \"INV/02/12/2023/001\",\n   \"amount\": 14000,\n   \"discount\": 0,\n   \"description\": \"testing\",\n   \"items\" : [\n       {\n           \"productId\": \"{{productId}}\",\n           \"quantity\": 4,\n           \"cost\": 1000\n       }\n   ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/purchases"
					},
					"response": []
				},
				{
					"name": "Get List Transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Message: List Transaction\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('purchases').that.is.an('array');",
									"    pm.expect(data).to.have.property('meta').that.is.an('object');",
									"    pm.expect(data.meta).to.have.property('page').that.is.a('number');",
									"    pm.expect(data.meta).to.have.property('total').that.is.a('number');",
									"    pm.expect(data.meta).to.have.property('totalPages').that.is.a('number');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/purchases"
					},
					"response": []
				},
				{
					"name": "Get Transaction Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var datas = pm.response.json();",
									"",
									"pm.test(\"Successful Get request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Data\", function() {",
									"    const data = datas.data;",
									"    pm.expect(data).to.have.property('purchase').that.is.an('object');",
									"    pm.expect(datas.status).to.eql(\"success\");",
									"})",
									"",
									"pm.test(\"Check Data purchase\", function () {",
									"    pm.expect(datas.data.purchase.date).to.match(/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).(\\d{3})Z$/);",
									"    pm.expect(datas.data.purchase.invoice).to.be.a('string');",
									"    pm.expect(datas.data.purchase.description).to.be.a('string');",
									"    pm.expect(datas.data.purchase.amount).to.be.a('number');",
									"    pm.expect(datas.data.purchase.discount).to.be.a('number');",
									"    pm.expect(datas.data.purchase.creator).to.be.a('string');",
									"    pm.expect(datas.data.purchase.office_name).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(datas.data.purchase).to.have.property('items').that.is.an('array');",
									"});",
									"",
									"pm.test(\"Check data items\", function() {",
									"    datas.data.purchase.items.forEach(function (item) {",
									"    pm.expect(item.id).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(item.code).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(item.name).to.satisfy(function (value) {",
									"        return value === null || typeof value === 'string';",
									"    });",
									"    pm.expect(item).to.have.property('quantity').that.is.a('number');",
									"    pm.expect(item).to.have.property('cost').that.is.a('number');",
									"    })",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/purchases/{{purchaseId}}"
					},
					"response": []
				}
			],
			"description": "Folder Testing Transaction"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://kasir-api.belajarqa.com",
			"type": "string"
		},
		{
			"key": "email",
			"value": "tobepi9218@ksyhtc.com",
			"type": "string"
		},
		{
			"key": "password",
			"value": "123adsfadf@",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "unitId",
			"value": ""
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "customerId",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "currentdate",
			"value": "2023-01-28T17:00:00.000Z"
		},
		{
			"key": "futuredate",
			"value": "2023-11-28T17:00:00.000Z"
		},
		{
			"key": "saleId",
			"value": ""
		}
	]
}